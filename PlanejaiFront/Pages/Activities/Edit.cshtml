@page "/Activities/Edit/{id:int}"
@model PlanejaiFront.Pages.Activities.Edit
@{
    ViewData["Title"] = "Planejaí - Editar atividade";
}

<style>
    body {
        background-color: #e9ecef;
    }

    .wrapper {
        margin: 10vh auto;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .form-container {
        min-width: 600px;
        margin: 0 auto;
        background-color: #fff;
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .form-container h2 {
        text-align: center;
    }

    .form-container .form-group {
        margin-bottom: 20px;
    }

    .form-container label {
        font-weight: bold;
    }

    .datetime-info {
        display: flex;
        flex-direction: row;
    }

    .datetime-info .form-group:first-child {
        flex-basis: 80%;
        margin-right: 10px;
    }

    .datetime-info .form-group:not(:first-child) {
        flex-basis: calc((20% - 10px) / 2);
    }

    .datetime-errors {
        display: flex;
        flex-direction: column;
    }

    .form-container .buttons {
        margin-bottom: 0;
    }
</style>

<div class="wrapper">
    <div class="form-container">
        <h2>Editar atividade</h2>
        <hr>
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ActivityToEdit.ActivityId" />
            <input type="hidden" asp-for="ActivityToEdit.ScheduleId" />
            <div class="form-group">
                <label asp-for="ActivityToEdit.Name">Nome:</label>
                <input asp-for="ActivityToEdit.Name" type="text" class="form-control" onkeyup="handleTextName(event)" value="@Model.ActivityToEdit.Name">
                <span asp-validation-for="ActivityToEdit.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ActivityToEdit.Description">Descrição:</label>
                <input asp-for="ActivityToEdit.Description" type="text" class="form-control" onkeyup="handleText(event)" value="@Model.ActivityToEdit.Description">
            </div>
            <div class="datetime-info">
                <div class="form-group">
                    <label asp-for="ActivityToEdit.StartDate">Data de início:</label>
                    <input asp-for="ActivityToEdit.StartDate" type="date" class="form-control" value="@Model.ActivityToEdit.StartDate!.Value.ToString("yyyy-MM-dd")">
                </div>
                <div class="form-group">
                    <label asp-for="ActivityToEdit.StartsAt">Horário:</label>
                    <input asp-for="ActivityToEdit.StartsAt" type="time" class="form-control" value="@Model.ActivityToEdit.StartsAt!.Value.TimeOfDay">
                </div>
            </div>
            <div class="datetime-info">
                <div class="form-group">
                    <label asp-for="ActivityToEdit.EndDate">Data de encerramento:</label>
                    <input asp-for="ActivityToEdit.EndDate" type="date" class="form-control" max="2030-12-31" value="@Model.ActivityToEdit.EndDate!.Value.ToString("yyyy-MM-dd")">
                </div>
                <div class="form-group">
                    <label asp-for="ActivityToEdit.EndsAt">Horário:</label>
                    <input asp-for="ActivityToEdit.EndsAt" type="time" class="form-control" value="@Model.ActivityToEdit.EndsAt!.Value.TimeOfDay">
                </div>
            </div>
            @if (!ModelState.IsValid)
            {
                <div class="form-group datetime-errors">
                    <span asp-validation-for="ActivityToEdit.StartDate" class="text-danger"></span>
                    <span asp-validation-for="ActivityToEdit.StartsAt" class="text-danger"></span>
                    <span asp-validation-for="ActivityToEdit.EndDate" class="text-danger"></span>
                    <span asp-validation-for="ActivityToEdit.EndsAt" class="text-danger"></span>
                    <span asp-validation-for="DatesAreValid" class="text-danger"></span>
                </div>
            }
            <div class="form-group buttons">
                <input type="submit" class="btn btn-primary btn-block" value="Editar" />
                <a asp-page="/Schedules/Details" asp-route-id="@Model.ActivityToEdit.ScheduleId" class="btn btn-secondary btn-block">Cancelar</a>
                <a asp-page="/Activities/Remove" asp-route-id="@Model.ActivityToEdit.ActivityId" class="btn btn-link btn-block text-danger">Excluir atividade</a>
            </div>
        </form>
    </div>
</div>

<script>
    const lettersOnly = (value) => {
        const regex = /^[a-zA-Z0-9\u00C0-\u00FF,.: ]+$/;
        return regex.test(value);
    }
    const handleText = (event) => {
        let input = event.target;
        let value = input.value;
        if (!lettersOnly(value)) {
            input.value = value.slice(0, -1);
        }
    }
    const lettersOnlyName = (value) => {
        const regex = /^[a-zA-Z0-9\u00C0-\u00FF ]+$/;
        return regex.test(value);
    }
    const handleTextName = (event) => {
        let input = event.target;
        let value = input.value;
        if (!lettersOnlyName(value)) {
            input.value = value.slice(0, -1);
        }
    }
</script>