// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PlanejaiBack.Data;

#nullable disable

namespace PlanejaiBack.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PlanejaiBack.Models.ActivityModel", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ActivityId"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDate")
                        .IsRequired()
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("EndsAt")
                        .IsRequired()
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("EventModelEventId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("StartDate")
                        .IsRequired()
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("StartsAt")
                        .IsRequired()
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("ActivityId");

                    b.HasIndex("EventModelEventId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("Activities", (string)null);
                });

            modelBuilder.Entity("PlanejaiBack.Models.EventModel", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EventId"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDate")
                        .IsRequired()
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("EndsAt")
                        .IsRequired()
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OrganizerId")
                        .HasColumnType("integer");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("StartDate")
                        .IsRequired()
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("StartsAt")
                        .IsRequired()
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("EventId");

                    b.HasIndex("OrganizerId");

                    b.ToTable("Events", (string)null);
                });

            modelBuilder.Entity("PlanejaiBack.Models.EventsGuests", b =>
                {
                    b.Property<int>("EventId")
                        .HasColumnType("integer");

                    b.Property<int>("GuestId")
                        .HasColumnType("integer");

                    b.HasKey("EventId", "GuestId");

                    b.HasIndex("GuestId");

                    b.ToTable("EventsGuests");
                });

            modelBuilder.Entity("PlanejaiBack.Models.GuestModel", b =>
                {
                    b.Property<int>("GuestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GuestId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("GuestId");

                    b.ToTable("Guests", (string)null);
                });

            modelBuilder.Entity("PlanejaiBack.Models.ScheduleModel", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ScheduleId"));

                    b.Property<int>("EventId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ScheduleId");

                    b.HasIndex("EventId")
                        .IsUnique();

                    b.ToTable("Schedules", (string)null);
                });

            modelBuilder.Entity("PlanejaiBack.Models.UserModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("PlanejaiBack.Models.ActivityModel", b =>
                {
                    b.HasOne("PlanejaiBack.Models.EventModel", null)
                        .WithMany("Activities")
                        .HasForeignKey("EventModelEventId");

                    b.HasOne("PlanejaiBack.Models.ScheduleModel", "Schedule")
                        .WithMany("Activities")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("PlanejaiBack.Models.EventModel", b =>
                {
                    b.HasOne("PlanejaiBack.Models.UserModel", "Organizer")
                        .WithMany("Events")
                        .HasForeignKey("OrganizerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organizer");
                });

            modelBuilder.Entity("PlanejaiBack.Models.EventsGuests", b =>
                {
                    b.HasOne("PlanejaiBack.Models.EventModel", "Event")
                        .WithMany("EventsGuests")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlanejaiBack.Models.GuestModel", "Guest")
                        .WithMany("EventsGuests")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("PlanejaiBack.Models.ScheduleModel", b =>
                {
                    b.HasOne("PlanejaiBack.Models.EventModel", "Event")
                        .WithOne("Schedule")
                        .HasForeignKey("PlanejaiBack.Models.ScheduleModel", "EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("PlanejaiBack.Models.EventModel", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("EventsGuests");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("PlanejaiBack.Models.GuestModel", b =>
                {
                    b.Navigation("EventsGuests");
                });

            modelBuilder.Entity("PlanejaiBack.Models.ScheduleModel", b =>
                {
                    b.Navigation("Activities");
                });

            modelBuilder.Entity("PlanejaiBack.Models.UserModel", b =>
                {
                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
